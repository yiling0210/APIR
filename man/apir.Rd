% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apir.R
\name{apir}
\alias{apir}
\title{Aggregate the PSM level results from multiple search algorithms}
\usage{
apir(
  saveas,
  target_ls,
  decoy_ls,
  scoreColTitle,
  scannumColTitle,
  sequenceColTitle,
  fileColTitle,
  modificationColTitle,
  masterproteinColTitle,
  proteinPositionColTitle,
  abundanceColTitle = NULL,
  ifadjust,
  ifAggregateAbundance,
  ifRecommendMasterProtein,
  ifRecommendModification,
  staticModification,
  phospho_dataset,
  organism,
  FDR,
  ncores = detectCores() - 1
)
}
\arguments{
\item{saveas}{a character string specifying the file names that scores the results of APIR.
APIR outputs three files: a PSM level output, a peptide level output, and a protein level output,
whose names would be what is specified plus output levels.
For example, if the input string of \code{saveas} is "apir_output.xlsx", the saved PSM output would be "apir_output_psm.xlsx", the saved peptide output would be "apir_output_pepseq.xlsx", and the protein output would be "apir_output_pro.xlsx".}

\item{target_ls}{a named list of target PSM level output from search algorithms that need to combined.
Each element of the list is a data frame object.
The names should specify the search algorithms (see examples below).
We recommend users to input the complete target PSM level output by setting the FDR of search algorithms to be 1.}

\item{decoy_ls}{a list of decoy PSM level output from search algorithms that need to combined.
Each element of the list is a data frame object.
Its length should be of the same as \code{target_ls}, and the order of search algorithms stored should match that in \code{target_ls}.
We recommend users to input the complete decoy PSM level output by setting the FDR of search algorithms to be 1.}

\item{scoreColTitle}{a string vector specifying the column names of scores in \code{target_ls}.
Note that within a search algorithm, the column names of scores in the target output should match that in the decoy output.
We recommend users to input the column names of q-values or posterior error probabilities.
Its length should be of the same as \code{target_ls}, and the order of search algorithms stored should match that in \code{target_ls}.}

\item{scannumColTitle}{a string vector specifying the column names of scan numbers in \code{target_ls}.
Note that within a search algorithm, the column names of scan numbers in the target output should match that in the decoy output.
Its length should be of the same as \code{target_ls}, and the order of search algorithms stored should match that in \code{target_ls}.}

\item{sequenceColTitle}{a string vector specifying the column names of peptide sequences in \code{target_ls}.
Note that within a search algorithm, the column names of peptide sequences in the target output should match that in the decoy output.
Its length should be of the same as \code{target_ls}, and the order of search algorithms stored should match that in \code{target_ls}.}

\item{fileColTitle}{a string vector specifying the column names of mass spectrum files in \code{target_ls}.
Note that within a search algorithm, the column names of mass spectrum files in the target output should match that in the decoy output.
Its length should be of the same as \code{target_ls}, and the order of search algorithms stored should match that in \code{target_ls}.}

\item{modificationColTitle}{a string vector specifying the column names of modifications in \code{target_ls}.
Note that within a search algorithm, the column names of modifications in the target output should match that in the decoy output.
Its length should be of the same as \code{target_ls}, and the order of search algorithms stored should match that in \code{target_ls}.}

\item{masterproteinColTitle}{a string vector specifying the column names of master proteins in \code{target_ls}.
Note that within a search algorithm, the column names of master proteins in the target output should match that in the decoy output.
Its length should be of the same as \code{target_ls}, and the order of search algorithms stored should match that in \code{target_ls}.}

\item{proteinPositionColTitle}{a string vector specifying the column names of modification positions in proteins in \code{target_ls}.
Note that within a search algorithm, the column names of master proteins in the target output should match that in the decoy output.
Its length should be of the same as \code{target_ls}, and the order of search algorithms stored should match that in \code{target_ls}.}

\item{abundanceColTitle}{a list of string vectors specifying the abundance column names in each search algorithm.
#' Note that within a search algorithm, the column names of abundances in the target output should match that in the decoy output.
Its length should be of the same as \code{target_ls}, and the order of search algorithms stored should match that in \code{target_ls}.}

\item{ifadjust}{a logical vector specifying if in the first round of identification q-value/pep thresholding should be applied, instead of APIR-adjust, to each search algorithm.
Its length should be of the same as \code{target_ls}, and the order of search algorithms stored should match that in \code{target_ls}.
We suggest users input a vector of \code{TRUE} if users are not sure the FDR control of individual search algorithms.}

\item{ifAggregateAbundance}{a logical specifying if abundances should be aggregated.
If specified as \code{TRUE}, \code{abundanceColTitle} also needs to be specified.}

\item{ifRecommendMasterProtein}{a logical specifying if a master protein should be aggregated using majority note.
If specified as \code{TRUE}, \code{masterproteinColTitle} also needs to be specified.}

\item{ifRecommendModification}{a logical specifying if modifications should be aggregated.
If specified as \code{TRUE}, \code{modificationColTitle} also needs to be specified.}

\item{staticModification}{a vector of static modification sites.
Could be one or more from "\code{C}"(Carbamidomethyl), "\code{K}"(TMT6plex), and "\code{N-term}"(TMT6plex).
The default is \code{c('C','K','N-term')}.}

\item{phospho_dataset}{a string specifying the location of the Phosphorylation_site_dataset downloaded from PhosphoSitePlus.
If not supplied, modifications sites are aggregated only based in frequency.
If supplied, modification sites are aggregated twice, once by frequency, once by both frequency and literature. See details.}

\item{organism}{a character string specifying the organism of your sample.
Could be any type available in the \code{ORGANISM} of \code{phospho_dataset}.
Only needed if phospho_dataset is not NULL.}

\item{FDR}{the target FDR threshold}

\item{ncores}{the number of cores for parallel computing. The default is \code{parallel::detectCores()-1}.}
}
\value{
\code{apir} outputs three excel files: one for the PSM level output, one for the peptide level, and another one for the protein level.
In its PSM level output, \code{apir} will append all columns that are in the target output from search algorithms.
}
\description{
Aggregate the PSM level results from multiple search algorithms
}
\details{
\code{apir} combines PSM level output from multiple search algorithms.
The following arguments, if specified, should have the same lengths as the number of search algorithms to be combined and should have the same order of search algorithms:
\code{target_ls}, \code{decoy_ls}, \code{ifadjust}, \code{scoreColTitle}, \code{scannumColTitle},
\code{sequenceColTitle}, \code{fileColTitle},\code{modificationColTitle}, \code{masterproteinColTitle},
\code{proteinPositionColTitle}, \code{abundanceColTitle}.
}
\examples{
### load data
data(maxquant_target)
data(maxquant_decoy)
data(msgf_target)
data(msgf_decoy)

### specifying arguments
target_ls = list(maxquant_target, msgf_target)
names(target_ls) = c('maxquant', 'msgf')
decoy_ls = list(maxquant_decoy, msgf_decoy)

ifadjust = c(TRUE, TRUE)
scoreColTitle = c('PEP','QValue')
fileColTitle = c("Raw.file", 'SpectrumFile')
scannumColTitle = c('MS/MS.scan.number', "ScanNum")
sequenceColTitle = c('Sequence', 'Sequence')
masterproteinColTitle = c('Leading.razor.protein.(format.fixed)','Protein.(format.fixed)')
modificationColTitle = c("Modifications.ProteomeDiscoverer.Format","Modifications.ProteomeDiscoverer.Format")
proteinPositionColTitle = c("Positions.in.Proteins","Positions.in.Proteins")
abundanceColTitle = list(maxquant = c("Reporter.intensity.corrected.1", "Reporter.intensity.corrected.2","Reporter.intensity.corrected.3", "Reporter.intensity.corrected.4"),msgf = c('TMT126','TMT127','TMT128','TMT129'))

### no phosphosite based recommendation
apir(saveas = 'apir_output_wphospoplus.xlsx',
FDR = 0.05,
target_ls = target_ls,
decoy_ls = decoy_ls,
ifadjust = ifadjust,
scoreColTitle = scoreColTitle,
fileColTitle = fileColTitle,
scannumColTitle = scannumColTitle,
sequenceColTitle = sequenceColTitle,
ifRecommendMasterProtein = TRUE,
masterproteinColTitle = masterproteinColTitle,
ifRecommendModification = TRUE,
modificationColTitle = modificationColTitle,
staticModification = c('C','K','N-term'),
proteinPositionColTitle = proteinPositionColTitle,
organism = NULL,
phospho_dataset = NULL,
ifAggregateAbundance = TRUE,
abundanceColTitle = abundanceColTitle)

###
organism = 'human'

apir(saveas = 'apir_output.xlsx',
FDR = 0.05,
target_ls = target_ls,
decoy_ls = decoy_ls,
ifadjust = ifadjust,
scoreColTitle = scoreColTitle,
fileColTitle = fileColTitle,
scannumColTitle = scannumColTitle,
sequenceColTitle = sequenceColTitle,
ifRecommendMasterProtein = TRUE,
masterproteinColTitle = masterproteinColTitle,
ifRecommendModification = TRUE,
modificationColTitle = modificationColTitle,
staticModification = c('C','K','N-term'),
proteinPositionColTitle = proteinPositionColTitle,
organism = organism,
phospho_dataset = PhosphoSitePlus,
ifAggregateAbundance = TRUE,
abundanceColTitle = abundanceColTitle)


}
\references{

}
\author{
Yiling Chen, \email{yiling0210@ucla.edu}

Jingyi Jessica Li, \email{jli@stat.ucla.edu}
}
